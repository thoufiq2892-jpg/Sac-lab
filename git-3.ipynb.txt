{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2ba1f9f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enetr value of a:1\n",
      "enetr value of b:2\n",
      "12\n"
     ]
    }
   ],
   "source": [
    "a=input(\"enetr value of a:\")\n",
    "b=input(\"enetr value of b:\")\n",
    "print(a+b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fdc8073b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter value of a:12\n",
      "enter value of b:13\n",
      "25\n"
     ]
    }
   ],
   "source": [
    "a=int(input(\"enter value of a:\"))\n",
    "b=int(input(\"enter value of b:\"))\n",
    "print(a+b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "65a1dc3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "what is your passion?computing\n",
      "computing is my passion\n"
     ]
    }
   ],
   "source": [
    "passion=input(\"what is your passion?\")\n",
    "print(\"{0} is my passion\".format(passion))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e777d2a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter your name:51\n",
      "enetr your roll no.:512\n",
      "i am 51 and my roll no. is512\n"
     ]
    }
   ],
   "source": [
    "name=input(\"enter your name:\")\n",
    "roll_no=input(\"enetr your roll no.:\")\n",
    "print(\"i am {0} and my roll no. is {1}\".format(name,roll_no))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "89b53df2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The value of a is 10 and b is 20\n",
      "the value of b is 20 and a is 10\n"
     ]
    }
   ],
   "source": [
    "a=10\n",
    "b=20\n",
    "print(\"The value of a is {0} and b is {1}\".format(a,b))\n",
    "print(\"the value of b is {1} and a is {0}\".format(a,b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8327cc88",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you can do the impossible\n"
     ]
    }
   ],
   "source": [
    "print(\"you can do the {a}\".format(a=\"impossible\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3509fff7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you can do the impossible.never give up\n"
     ]
    }
   ],
   "source": [
    "print(\"you can do the {a}.{b}\".format(a=\"impossible\",b=\"never give up\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a038b901",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "addition of 10 and 20 is 30\n"
     ]
    }
   ],
   "source": [
    "a=10\n",
    "b=20\n",
    "print(f\"addition of {a} and {b} is {a+b}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "eb0074b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter teh radius of the circle5\n",
      "the area of the circle is 78.53975\n",
      "the circumference of a circle is 31.4159\n"
     ]
    }
   ],
   "source": [
    "radius=int(input(\"enter teh radius of the circle\"))\n",
    "area_of_circle=3.14159*radius*radius\n",
    "circumference=3.14159*2*radius\n",
    "print(f\"the area of the circle is {area_of_circle}\")\n",
    "print(f\"the circumference of a circle is {circumference}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b6491aa8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter your birth year:2005\n",
      "you are 20 year old\n"
     ]
    }
   ],
   "source": [
    "birth_year=int(input(\"enter your birth year:\"))\n",
    "current_year=2025\n",
    "age=current_year-birth_year\n",
    "print(f\"you are {age} year old\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e3cc8c13",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter total marks:50\n",
      "enter the marks obtained:51\n",
      "Exact percentage:102.0%\n",
      "Whole percentage shown on report:102%d\n"
     ]
    }
   ],
   "source": [
    "total_marks=int(input(\"enter total marks:\"))\n",
    "marks_obtained=int(input(\"enter the marks obtained:\"))\n",
    "percentage=(marks_obtained/total_marks)*100\n",
    "whole_percentage=int(percentage)\n",
    "print(f\"Exact percentage:{percentage}%\")\n",
    "print(f\"Whole percentage shown on report:{whole_percentage}%d\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "54d0f7a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "i am 20 years old\n"
     ]
    }
   ],
   "source": [
    "age=20\n",
    "print(\"i am\"+age+\"years old\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "17b2f3bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "i am 20 years old\n"
     ]
    }
   ],
   "source": [
    "age=20\n",
    "print(\"i am \"+str(age)+\" years old\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f6d914ed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter an integer between 0 and 25583\n",
      "the ASCII charecter for 83is :S\n"
     ]
    }
   ],
   "source": [
    "num=int(input(\"Enter an integer between 0 and 255\"))\n",
    "char=chr(num)\n",
    "print(f\"the ASCII charecter for {num}is :{char}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0671b234",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Complex number (real+imag): (3+4j)\n"
     ]
    }
   ],
   "source": [
    "c1=complex(3,4)\n",
    "print(\"Complex number (real+imag):\",c1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da7d81db",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
